/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BG_MAIN_ID));
    add(image1);

    PIN_100.setXY(10, 10);
    PIN_100.setBitmap(touchgfx::Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_ID));
    PIN_100.setVisible(false);
    add(PIN_100);

    PIN_75.setXY(10, 10);
    PIN_75.setBitmap(touchgfx::Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_80_ID));
    PIN_75.setVisible(false);
    add(PIN_75);

    PIN_50.setXY(10, 10);
    PIN_50.setBitmap(touchgfx::Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_60_ID));
    PIN_50.setVisible(false);
    add(PIN_50);

    PIN_25.setXY(10, 10);
    PIN_25.setBitmap(touchgfx::Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_25_ID));
    PIN_25.setVisible(false);
    add(PIN_25);

    PIN_0.setXY(10, 10);
    PIN_0.setBitmap(touchgfx::Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_0_ID));
    add(PIN_0);

    button_control.setXY(40, 95);
    button_control.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    button_control.setLabelText(touchgfx::TypedText(T___SINGLEUSE_BIV9));
    button_control.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button_control.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button_control.setAction(buttonCallback);
    add(button_control);

    button_auto.setXY(40, 168);
    button_auto.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    button_auto.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9YB1));
    button_auto.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button_auto.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(button_auto);

    select_mode.setXY(58, 25);
    select_mode.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    select_mode.setLinespacing(0);
    select_mode.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RGNJ));
    add(select_mode);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_control)
    {
        //Interaction1
        //When button_control clicked change screen to CONTROL_MODE
        //Go to CONTROL_MODE with screen transition towards West
        application().gotoCONTROL_MODEScreenWipeTransitionWest();
    }
}
