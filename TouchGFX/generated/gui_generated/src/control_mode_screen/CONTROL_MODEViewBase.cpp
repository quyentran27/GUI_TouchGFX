/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/control_mode_screen/CONTROL_MODEViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CONTROL_MODEViewBase::CONTROL_MODEViewBase() :
    flexButtonCallback(this, &CONTROL_MODEViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BG_MAIN_ID));
    add(image1);

    Back_seclect_mode.setBoxWithBorderPosition(0, 0, 42, 38);
    Back_seclect_mode.setBorderSize(5);
    Back_seclect_mode.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Back_seclect_mode.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_PREVIOUS_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Back_seclect_mode.setIconXY(-3, -3);
    Back_seclect_mode.setAction(flexButtonCallback);
    Back_seclect_mode.setPosition(0, 202, 42, 38);
    add(Back_seclect_mode);

    Motor.setXY(10, 83);
    Motor.setProgressIndicatorPosition(0, 0, 300, 18);
    Motor.setRange(0, 1024);
    Motor.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    Motor.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_THICK_MEDIUM_ID));
    Motor.setColor(touchgfx::Color::getColorFromRGB(255, 0, 8));
    Motor.setValue(1);
    add(Motor);

    MODE_control.setXY(85, 12);
    MODE_control.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MODE_control.setLinespacing(0);
    MODE_control.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K0EU));
    add(MODE_control);

    motor_val.setXY(10, 50);
    motor_val.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    motor_val.setLinespacing(0);
    Unicode::snprintf(motor_valBuffer, MOTOR_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DDQP).getText());
    motor_val.setWildcard(motor_valBuffer);
    motor_val.resizeToCurrentText();
    motor_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4E5B));
    add(motor_val);

    bldc.setXY(10, 147);
    bldc.setProgressIndicatorPosition(0, 0, 300, 18);
    bldc.setRange(0, 1024);
    bldc.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    bldc.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_THICK_MEDIUM_ID));
    bldc.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    bldc.setValue(0);
    add(bldc);

    bldc_val.setXY(10, 108);
    bldc_val.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bldc_val.setLinespacing(0);
    Unicode::snprintf(bldc_valBuffer, BLDC_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O38U).getText());
    bldc_val.setWildcard(bldc_valBuffer);
    bldc_val.resizeToCurrentText();
    bldc_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_43W6));
    add(bldc_val);

    pressure.setXY(75, 189);
    pressure.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pressure.setLinespacing(0);
    Unicode::snprintf(pressureBuffer, PRESSURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KG48).getText());
    pressure.setWildcard(pressureBuffer);
    pressure.resizeToCurrentText();
    pressure.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M810));
    add(pressure);

    Next_parameter.setBoxWithBorderPosition(0, 0, 44, 38);
    Next_parameter.setBorderSize(5);
    Next_parameter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Next_parameter.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Next_parameter.setIconXY(0, -5);
    Next_parameter.setAction(flexButtonCallback);
    Next_parameter.setPosition(276, 202, 44, 38);
    add(Next_parameter);
}

CONTROL_MODEViewBase::~CONTROL_MODEViewBase()
{

}

void CONTROL_MODEViewBase::setupScreen()
{

}

void CONTROL_MODEViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Back_seclect_mode)
    {
        //Interaction1
        //When Back_seclect_mode clicked change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenWipeTransitionEast();
    }
    if (&src == &Next_parameter)
    {
        //Interaction2
        //When Next_parameter clicked change screen to CONTROL_MODE_2
        //Go to CONTROL_MODE_2 with screen transition towards West
        application().gotoCONTROL_MODE_2ScreenWipeTransitionWest();
    }
}
